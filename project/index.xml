<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on Rushabh Shah</title>
    <link>https://shahrushabh.github.io/project/</link>
    <description>Recent content in Projects on Rushabh Shah</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2017 Rushabh Shah</copyright>
    <lastBuildDate>Wed, 27 Apr 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="/project/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Big Data Analysis</title>
      <link>https://shahrushabh.github.io/project/hadoop/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://shahrushabh.github.io/project/hadoop/</guid>
      <description>

&lt;p&gt;Data analysis using different tools of hadoop eco system, including HDFS, MapReduce, Pig Scrips, and Spark. Each experiment listed below targets specific tool of the eco system.&lt;/p&gt;

&lt;h3 id=&#34;projects&#34;&gt;Projects&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;MapReduce projects:

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/shahrushabh/Hadoop/tree/master/MapReduce/Bigram&#34; target=&#34;_blank&#34;&gt;Bigram Counts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/shahrushabh/Hadoop/tree/master/MapReduce/CitationGraph&#34; target=&#34;_blank&#34;&gt;Patent CitationGraph&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/shahrushabh/Hadoop/tree/master/MapReduce/SortData&#34; target=&#34;_blank&#34;&gt;Total Order Sort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/shahrushabh/Hadoop/tree/master/MapReduce/TweetAnalysis&#34; target=&#34;_blank&#34;&gt;Tweet Analysis&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Pig projects:

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/shahrushabh/Hadoop/tree/master/PigScripts&#34; target=&#34;_blank&#34;&gt;Firewall&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Spark projects:

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/shahrushabh/Hadoop/tree/master/Spark&#34; target=&#34;_blank&#34;&gt;Directed Cycles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/shahrushabh/Hadoop/tree/master/Spark&#34; target=&#34;_blank&#34;&gt;Firewall&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&#34;carousel-hadoop&#34; class=&#34;carousel slide&#34; data-ride=&#34;carousel&#34;&gt;
  &lt;div class=&#34;carousel-inner&#34; role=&#34;listbox&#34;&gt;
    &lt;div class=&#34;item active&#34;&gt;
      &lt;img src=&#34;https://shahrushabh.github.io/img/hadoop/firewall_log.png&#34; class=&#34;img-responsive&#34; alt=&#34;Responsive image&#34;&gt;
      &lt;div class=&#34;carousel-caption&#34;&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&#34;item&#34;&gt;
      &lt;img src=&#34;https://shahrushabh.github.io/img/hadoop/follower.png&#34; class=&#34;img-responsive&#34; alt=&#34;Responsive image&#34;&gt;
      &lt;div class=&#34;carousel-caption&#34;&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&#34;item&#34;&gt;
      &lt;img src=&#34;https://shahrushabh.github.io/img/hadoop/50M-part-r-00000.png&#34; class=&#34;img-responsive&#34; alt=&#34;Responsive image&#34;&gt;
      &lt;div class=&#34;carousel-caption&#34;&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&#34;item&#34;&gt;
      &lt;img src=&#34;https://shahrushabh.github.io/img/hadoop/50M-part-r-00001.png&#34; class=&#34;img-responsive&#34; alt=&#34;Responsive image&#34;&gt;
      &lt;div class=&#34;carousel-caption&#34;&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&#34;item&#34;&gt;
      &lt;img src=&#34;https://shahrushabh.github.io/img/hadoop/50M-part-r-00002.png&#34; class=&#34;img-responsive&#34; alt=&#34;Responsive image&#34;&gt;
      &lt;div class=&#34;carousel-caption&#34;&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&#34;item&#34;&gt;
      &lt;img src=&#34;https://shahrushabh.github.io/img/hadoop/50M-part-r-00000.png&#34; class=&#34;img-responsive&#34; alt=&#34;Responsive image&#34;&gt;
      &lt;div class=&#34;carousel-caption&#34;&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Mars Rover</title>
      <link>https://shahrushabh.github.io/project/mars_rover/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://shahrushabh.github.io/project/mars_rover/</guid>
      <description>

&lt;p&gt;Mars Rover is an embedded system projects, that exposes students to embedded programming. Making use of C programming language along with the VORTEX platform, &amp;ldquo;that includes iRobot Create, the Cerebot II board, and attachments such as servo, SONAR, IR sensor, and LCD&amp;rdquo; panel. Teams, group of 3-4, are asked to calibrate sensors and program the robot for different tasks, one at a time. For example, Moving and turning the robot accurately, receiving and sending messages using serial communication, calibration of various sensors, and so on. The final project demonstration depends on the accuracy with which data is being fetched and analyzed. Demo required students to navigate the robot to the destination, without looking at the course, by analysis of data, in real time, received from the robot&amp;rsquo;s sensors.&lt;/p&gt;

&lt;h3 id=&#34;goal&#34;&gt;Goal&lt;/h3&gt;

&lt;p&gt;Every team is given 10 minutes to navigate their robot through the maze and find the destination, determined by the supervising TA. Teams get penalized for hitting one of the obstacles or going out of bounds, or falling into the trap. Going over the time limit is also subject to penalty.&lt;/p&gt;

&lt;h3 id=&#34;responsibility&#34;&gt;Responsibility&lt;/h3&gt;

&lt;p&gt;Tasks I performed included:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Calibration of iRobot&amp;rsquo;s sensors, including Sonar sensor, IR sensor, Servo.&lt;/li&gt;
&lt;li&gt;Serial Data transmission for sending commands and receiving data.&lt;/li&gt;
&lt;li&gt;Implement GUI and communication between the robot and desktop in Matlab.&lt;/li&gt;
&lt;li&gt;Plot and update the graph with the most recent data received from the iRobot.&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&#34;carousel-marsrover&#34; class=&#34;carousel slide&#34; data-ride=&#34;carousel&#34;&gt;
  &lt;ol style=&#34;background-color:darkgrey&#34; class=&#34;carousel-indicators&#34;&gt;
    &lt;li data-target=&#34;#carousel-marsrover&#34; data-slide-to=&#34;0&#34; class=&#34;active&#34;&gt;&lt;/li&gt;
    &lt;li data-target=&#34;#carousel-marsrover&#34; data-slide-to=&#34;1&#34;&gt;&lt;/li&gt;
    &lt;li data-target=&#34;#carousel-marsrover&#34; data-slide-to=&#34;2&#34;&gt;&lt;/li&gt;
    &lt;li data-target=&#34;#carousel-marsrover&#34; data-slide-to=&#34;3&#34;&gt;&lt;/li&gt;
    &lt;li data-target=&#34;#carousel-marsrover&#34; data-slide-to=&#34;4&#34;&gt;&lt;/li&gt;
  &lt;/ol&gt;

  &lt;div class=&#34;carousel-inner&#34; role=&#34;listbox&#34;&gt;
    &lt;div class=&#34;item active&#34;&gt;
      &lt;img src=&#34;https://shahrushabh.github.io/img/marsrover/home_view.png&#34; class=&#34;img-responsive&#34; alt=&#34;Home View&#34;&gt;
      &lt;div class=&#34;carousel-caption&#34;&gt;
      &lt;p style=&#34;color:grey&#34;&gt;Object detection&lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&#34;item&#34;&gt;
      &lt;img src=&#34;https://shahrushabh.github.io/img/marsrover/course.jpg&#34; class=&#34;img-responsive&#34; alt=&#34;Maze&#34;&gt;
      &lt;div class=&#34;carousel-caption&#34;&gt;
      &lt;p&gt;Maze to Navigate&lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&#34;item&#34;&gt;
      &lt;img src=&#34;https://shahrushabh.github.io/img/marsrover/destination.png&#34; class=&#34;img-responsive&#34; alt=&#34;Destination detection&#34;&gt;
      &lt;div class=&#34;carousel-caption&#34;&gt;
      &lt;p style=&#34;color:darkblue&#34;&gt;Destination detection by sensors&lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&#34;item&#34;&gt;
      &lt;img src=&#34;https://shahrushabh.github.io/img/marsrover/commands.png&#34; class=&#34;img-responsive&#34; alt=&#34;Command Execution&#34;&gt;
      &lt;div class=&#34;carousel-caption&#34;&gt;
      &lt;p style=&#34;color:grey&#34;&gt;Data collection&lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&#34;item&#34;&gt;
      &lt;img src=&#34;https://shahrushabh.github.io/img/marsrover/goal_reached.png&#34; class=&#34;img-responsive&#34; alt=&#34;Goal Reached!&#34;&gt;
      &lt;div class=&#34;carousel-caption&#34;&gt;
        &lt;p style=&#34;color:green&#34;&gt;Goal Reached!&lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Ticket Trading</title>
      <link>https://shahrushabh.github.io/project/ticket_sell/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://shahrushabh.github.io/project/ticket_sell/</guid>
      <description>

&lt;p&gt;Ticket Trading utilizes android and its features to provide, easy-to-use and convenient, ticket trading platform for its users. Core features include, list one or multiple tickets for sale, browse through available tickets in a list mode or see a detailed view of a specific listing, search for specific tickets with dedicated controls, and option to sort by price, date, and type. Additional features include facebook login, history of tickets listed, and integrated messaging to negotiate deals.&lt;/p&gt;

&lt;h3 id=&#34;goal&#34;&gt;Goal&lt;/h3&gt;

&lt;p&gt;Our team&amp;rsquo;s primary goal was to deliver polished applications that includes features in out proposal. Considering team&amp;rsquo;s background in regards to the tools used in this project, I would say we accomplished our goal.&lt;/p&gt;

&lt;h3 id=&#34;responsibility&#34;&gt;Responsibility&lt;/h3&gt;

&lt;p&gt;With no prior android or web development experience, I took the responsibility of back-end portion. I utilized Volley for transmission of data between client and server. PHP was used for data manipulation on server-side with MySQL database for storage. My contribution included following things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Utilized Volley library to allow client-server communications.&lt;/li&gt;
&lt;li&gt;Implemented PHP scripts to handle client requests, access MySQL database to insert, update or query data, and send results back to client.&lt;/li&gt;
&lt;li&gt;Design database schema for users and tickets.&lt;/li&gt;
&lt;li&gt;Debug and solve conflicts that arise while merging code, using Git.&lt;/li&gt;
&lt;/ul&gt;

&lt;div id=&#34;carousel-ticket_sell&#34; class=&#34;carousel slide&#34; data-ride=&#34;carousel&#34;&gt;
  &lt;ol style=&#34;background-color:darkgrey&#34; class=&#34;carousel-indicators&#34;&gt;
    &lt;li data-target=&#34;#carousel-ticket_sell&#34; data-slide-to=&#34;0&#34; class=&#34;active&#34;&gt;&lt;/li&gt;
    &lt;li data-target=&#34;#carousel-ticket_sell&#34; data-slide-to=&#34;1&#34;&gt;&lt;/li&gt;
    &lt;li data-target=&#34;#carousel-ticket_sell&#34; data-slide-to=&#34;2&#34;&gt;&lt;/li&gt;
    &lt;li data-target=&#34;#carousel-ticket_sell&#34; data-slide-to=&#34;3&#34;&gt;&lt;/li&gt;
  &lt;/ol&gt;

  &lt;div class=&#34;carousel-inner&#34; role=&#34;listbox&#34;&gt;
    &lt;div class=&#34;item active&#34;&gt;
      &lt;img src=&#34;https://shahrushabh.github.io/img/ticket_sell/gesture.png&#34; class=&#34;img-responsive&#34; alt=&#34;Responsive image&#34;&gt;
      &lt;div class=&#34;carousel-caption&#34;&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&#34;item&#34;&gt;
      &lt;img src=&#34;https://shahrushabh.github.io/img/ticket_sell/message.png&#34; class=&#34;img-responsive&#34; alt=&#34;Responsive image&#34;&gt;
      &lt;div class=&#34;carousel-caption&#34;&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&#34;item&#34;&gt;
      &lt;img src=&#34;https://shahrushabh.github.io/img/ticket_sell/home_view.png&#34; class=&#34;img-responsive&#34; alt=&#34;Responsive image&#34;&gt;
      &lt;div class=&#34;carousel-caption&#34;&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&#34;item&#34;&gt;
      &lt;img src=&#34;https://shahrushabh.github.io/img/ticket_sell/detail_view.png&#34; class=&#34;img-responsive&#34; alt=&#34;Responsive image&#34;&gt;
      &lt;div class=&#34;carousel-caption&#34;&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
